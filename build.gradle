plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.12.0"
}

repositories {
    mavenCentral()
}

def assertJVersion = "3.26.3",
    slf4jVersion = "2.0.16",
    junitJupiterVersion = "5.11.2",
    restAssuredVersion = "5.5.0",
    jacksonDatabindVersion = "2.18.0",
    allureVersion = "2.29.0"

dependencies
        {
            testImplementation(
                    "org.junit.jupiter:junit-jupiter:$junitJupiterVersion",
                    "org.slf4j:slf4j-simple:$slf4jVersion",
                    "io.rest-assured:rest-assured:$restAssuredVersion",
                    "org.assertj:assertj-core:$assertJVersion",
                    "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion",
                    "io.qameta.allure:allure-rest-assured:$allureVersion",
                    "io.appium:java-client:9.3.0",
                    "com.codeborne:selenide:7.5.1",
                    "io.qameta.allure:allure-selenide:$allureVersion",
                    "org.aeonbits.owner:owner:1.0.12"
            )
        }

allure {
    version.set(allureVersion)
    adapter {
        allureJavaVersion.set(allureVersion)
        aspectjVersion.set("1.9.22.1")
        aspectjWeaver.set(true)

        frameworks {
            junit5 {
                // Defaults to allureJavaVersion
                adapterVersion.set(allureVersion)
                enabled.set(true)
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
task android(type: Test) {
    useJUnitPlatform {
        includeTags("android")
    }
}
task ios(type: Test) {
    useJUnitPlatform {
        includeTags("ios")
    }
}